

NDVI of Taranaki from 1999-2000 to 2019-2020. 


var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-87.28897573448786, 21.399668874531322],
          [-87.28897573448786, 20.161971225429728],
          [-86.69022085167536, 20.161971225429728],
          [-86.69022085167536, 21.399668874531322]]], null, false);

//-----------------------------------------------------------------
// This is a function to filter out clouds in landsat8 imagery

// This example demonstrates the use of the pixel QA band to mask
// clouds in surface reflectance (SR) data.  It is suitable
// for use with any of the Landsat SR datasets.

// Function to cloud mask from the pixel_qa band of Landsat 8 SR data.
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = 1 << 3;
  var cloudsBitMask = 1 << 5;

  // Get the pixel QA band.
  var qa = image.select('pixel_qa');

  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
      .and(qa.bitwiseAnd(cloudsBitMask).eq(0));

  // Return the masked image, scaled to reflectance, without the QA bands.
  return image.updateMask(mask).divide(10000)
      .select("B[0-9]*")
      .copyProperties(image, ["system:time_start"]);
} 

//-----------------------------------------------------------------

var landsat2020 = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR")
                 .filterDate('2019-01-02', '2020-01-20')
                 .map(maskL8sr)
                 .median()
                 .normalizedDifference(["B5","B4"])
                 .clip(geometry);
  


var landsat2000 = ee.ImageCollection("LANDSAT/LT05/C01/T1_SR")
                 .filterDate('1999-01-02', '2000-01-29')
                 .map(maskL8sr)
                 .median()
                 .normalizedDifference(["B4","B3"])
                 .clip(geometry);
                 
var palette = ['FFFFFF', 'CE7E45', 'DF923D', 'F1B555', 'FCD163', '99B718',
               '74A901', '66A000', '529400', '3E8601', '207401', '056201',
               '004C00', '023B01', '012E01', '011D01', '011301']; 
               
Map.addLayer(landsat2000, {min: 0, max: 1, palette: palette}, 'NDVI')
Map.addLayer(landsat2020, {min: 0, max: 1, palette: palette}, 'NDVI')

Map.centerObject(geometry, 12)


//Map.addLayer(landsat);

Export.image.toDrive({
  image: landsat2000,
  scale: 30,
  region: geometry
});
