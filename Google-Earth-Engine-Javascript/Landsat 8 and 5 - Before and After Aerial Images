
Intro: Difference between aerial image from 2020-2021 (Landsat8) to  1984-2004 (Landsat5) in Taranaki.
Useful to detect change. e.g. Urbanisation, vegetation loss etc..

EDITOR FILE 1

###  Taranaki Landsat 8 image from  2020 to 2021  #### 

var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[173.29939350434776, -38.817956515901116],
          [173.29939350434776, -39.95572084792913],
          [175.10664448091026, -39.95572084792913],
          [175.10664448091026, -38.817956515901116]]], null, false);
------------------

/**
 * Function to mask clouds based on the pixel_qa band of Landsat 8 SR data.
 * @param {ee.Image} image input Landsat 8 SR image
 * @return {ee.Image} cloudmasked Landsat 8 image
 */
function maskL8sr(image) {
  // Bits 3 and 5 are cloud shadow and cloud, respectively.
  var cloudShadowBitMask = (1 << 3);
  var cloudsBitMask = (1 << 5);
  // Get the pixel QA band.
  var qa = image.select('pixel_qa');
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudShadowBitMask).eq(0)
                 .and(qa.bitwiseAnd(cloudsBitMask).eq(0));
  return image.updateMask(mask);
}

var dataset = ee.ImageCollection('LANDSAT/LC08/C01/T1_SR')
                  .filterDate('2020-01-01', '2021-07-31')
                  .map(maskL8sr);
var landsat8= dataset.median().clip(geometry);
var visParams = {
  bands: ['B4', 'B3', 'B2'],
  min: 0,
  max: 3000,
  gamma: 1.4,
};
Map.setCenter(174.0576, -39.2898, 9);
Map.addLayer(landsat8, visParams);


EDITOR FILE 2 

###  Taranaki Landsat 8 image from  1984 to 2004  #### 


var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[173.6335157287724, -38.88127238033824],
          [173.6335157287724, -39.75246311457404],
          [174.8804639709599, -39.75246311457404],
          [174.8804639709599, -38.88127238033824]]], null, false);


----------------------------

/**
 * Function to mask clouds based on the pixel_qa band of Landsat SR data.
 * @param {ee.Image} image Input Landsat SR image
 * @return {ee.Image} Cloudmasked Landsat image
 */
var cloudMaskL457 = function(image) {
  var qa = image.select('pixel_qa');
  // If the cloud bit (5) is set and the cloud confidence (7) is high
  // or the cloud shadow bit is set (3), then it's a bad pixel.
  var cloud = qa.bitwiseAnd(1 << 5)
                  .and(qa.bitwiseAnd(1 << 7))
                  .or(qa.bitwiseAnd(1 << 3));
  // Remove edge pixels that don't occur in all bands
  var mask2 = image.mask().reduce(ee.Reducer.min());
  return image.updateMask(cloud.not()).updateMask(mask2);
};

var dataset = ee.ImageCollection('LANDSAT/LT05/C01/T1_SR')
                  .filterDate('1984-01-01', '2004-12-31')
                  .map(cloudMaskL457);

var landsat5= dataset.median().clip(geometry);
var visParams = {
  bands: ['B3', 'B2', 'B1'],
  min: 0,
  max: 3000,
  gamma: 1.4,
};
Map.setCenter(174.0576, -39.2898, 9);
Map.addLayer(landsat5, visParams);


//Map.addLayer(landsat);

Export.image.toDrive({
  image: landsat5,
  scale: 30,
  region: geometry
});
